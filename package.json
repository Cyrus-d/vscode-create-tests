{
  "name": "create-tests",
  "displayName": "Create tests",
  "description": "An extension to quickly generate test files.",
  "version": "1.1.1",
  "publisher": "hardikmodha",
  "homepage": "https://github.com/HardikModha/vscode-create-tests/blob/master/README.md",
  "author": {
    "name": "Hardik Modha",
    "email": "hardikmodha22@gmail.com"
  },
  "engines": {
    "vscode": "^1.24.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Other"
  ],
  "keywords": [
    "code generator",
    "tests",
    "test file generator",
    "create tests",
    "create test file"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:javascript",
    "onLanguage:typescriptreact",
    "onLanguage:javascriptreact"
  ],
  "main": "./out/extension",
  "contributes": {
    "commands": [
      {
        "command": "testRunner.create",
        "title": "Create test file"
      },
      {
        "command": "createStory.create",
        "title": "Create story file"
      },
      {
        "command": "testRunner.test",
        "title": "Test this file"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "resourceLangId == typescript",
          "command": "testRunner.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascript",
          "command": "testRunner.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescriptreact",
          "command": "testRunner.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascriptreact",
          "command": "testRunner.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescript",
          "command": "testRunner.test",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascript",
          "command": "testRunner.test",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescriptreact",
          "command": "testRunner.test",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascriptreact",
          "command": "testRunner.test",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescript",
          "command": "createStory.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascript",
          "command": "createStory.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescriptreact",
          "command": "createStory.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascriptreact",
          "command": "createStory.create",
          "group": "2_workspace"
        }
      ],
      "editor/title/context": [
        {
          "when": "resourceLangId == typescript",
          "command": "testRunner.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascript",
          "command": "testRunner.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescriptreact",
          "command": "testRunner.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascriptreact",
          "command": "testRunner.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescript",
          "command": "testRunner.test",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascript",
          "command": "testRunner.test",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescriptreact",
          "command": "testRunner.test",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascriptreact",
          "command": "testRunner.test",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescript",
          "command": "createStory.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascript",
          "command": "createStory.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescriptreact",
          "command": "createStory.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascriptreact",
          "command": "createStory.create",
          "group": "2_workspace"
        }
      ],
      "editor/context": [
        {
          "when": "resourceLangId == typescript",
          "command": "testRunner.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascript",
          "command": "testRunner.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescriptreact",
          "command": "testRunner.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascriptreact",
          "command": "testRunner.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescript",
          "command": "testRunner.test",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascript",
          "command": "testRunner.test",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescriptreact",
          "command": "testRunner.test",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascriptreact",
          "command": "testRunner.test",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescript",
          "command": "createStory.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascript",
          "command": "createStory.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == typescriptreact",
          "command": "createStory.create",
          "group": "2_workspace"
        },
        {
          "when": "resourceLangId == javascriptreact",
          "command": "createStory.create",
          "group": "2_workspace"
        }
      ]
    },
    "configuration": {
      "title": "Where to keep the test files?",
      "properties": {
        "testRunner.defaultLocationForFiles": {
          "type": "string",
          "default": "same location as source file",
          "enum": [
            "same location as source file",
            "project root"
          ],
          "description": "Where to keep the created test files?"
        },
        "testRunner.sourceDir": {
          "type": "string",
          "default": "src",
          "description": "Name of directory which contains all source files. This directory is not created when generating the directory structure for the test file."
        },
        "testRunner.directoryName": {
          "type": "string",
          "default": "__tests__",
          "description": "Name of the test directory."
        },
        "testRunner.customLocationForFiles": {
          "type": "string",
          "description": "Set this property in case you want to specify the custom location for test files."
        },
        "testRunner.filesSuffix": {
          "type": "string",
          "default": "test",
          "description": "Suffix to use for the test files."
        },
        "testRunner.shouldSwitchToFile": {
          "type": "boolean",
          "default": true,
          "description": "Whether to switch to the test file or not after creating it."
        },
        "testRunner.template.*": {
          "type": [
            "array",
            "object"
          ],
          "description": "Language specific templates that you want to use."
        },
        "testRunner.template.default": {
          "type": [
            "array",
            "object"
          ],
          "default": [
            ""
          ],
          "description": "Default template to use for all test file"
        },
        "testRunner.framework": {
          "type": "string",
          "default": "jest",
          "description": "Test framework"
        },
        "testRunner.useForwardSlash": {
          "type": "boolean",
          "default": "jest",
          "description": "If set to true will make backslash to forward slash, useful for windows and jest."
        },
        "testRunner.supportedExtension": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "ts",
            "tsx",
            "js",
            "jsx",
            "cs"
          ],
          "description": "Test supported Extension"
        },
        "testRunner.watchCommands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "--watch",
            "dotnet watch"
          ],
          "description": "If file created for the firs time test will not run,unless a watch command detected."
        },
        "testRunner.tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "task",
            "properties": {
              "label": {
                "type": "string",
                "description": "Name of task"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string",
                  "title": "task"
                },
                "description": "Arguments to pass to test"
              },
              "useForwardSlash": {
                "type": "boolean",
                "default": true,
                "description": "Will convert back slash to forward slash, Required for jest when running in windows"
              },
              "usePathFromBaseDirectory": {
                "type": "boolean",
                "default": true,
                "description": "When set to true the workspace root path will be removed, Required for jest"
              },
              "shouldSwitchToFile": {
                "type": "boolean",
                "default": true,
                "description": "Whether to switch to the test file or not."
              },
              "openInNewTerminal": {
                "type": "boolean",
                "default": true,
                "description": "Will open new terminal for each run."
              },
              "command": {
                "type": "string",
                "default": "jest"
              },
              "default": {
                "type": "boolean",
                "description": "When unable to detect task, will run task with default set to true"
              }
            },
            "required": [
              "label",
              "command"
            ]
          },
          "description": "Whether to switch to the story file or not after creating it."
        },
        "createStory.defaultLocationForFiles": {
          "type": "string",
          "default": "same location as source file",
          "enum": [
            "same location as source file",
            "project root"
          ],
          "description": "Where to keep the created story files?"
        },
        "createStory.sourceDir": {
          "type": "string",
          "default": "src",
          "description": "Name of directory which contains all source files. This directory is not created when generating the directory structure for the story file."
        },
        "createStory.directoryName": {
          "type": "string",
          "default": "stories",
          "description": "Name of the story directory."
        },
        "createStory.customLocationForFiles": {
          "type": "string",
          "description": "Set this property in case you want to specify the custom location for story files."
        },
        "createStory.filesSuffix": {
          "type": "string",
          "default": "stories",
          "description": "Suffix to use for the story files."
        },
        "createStory.shouldSwitchToFile": {
          "type": "boolean",
          "default": true,
          "description": "Whether to switch to the story file or not after creating it."
        },
        "createStory.template.*": {
          "type": [
            "array",
            "object"
          ],
          "description": "Language specific templates that you want to use."
        },
        "createStory.template.default": {
          "type": [
            "array",
            "object"
          ],
          "default": [
            ""
          ],
          "description": "Default template to use for all story file"
        }
      }
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/HardikModha/vscode-create-tests.git"
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "lint-ts": "tslint --config ./tslint.json --project ./tsconfig.json",
    "test": "npm run lint-ts && npm run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/mocha": "^2.2.42",
    "@types/node": "^7.0.43",
    "tslint": "^5.10.0",
    "typescript": "^3.8.3",
    "vscode": "^1.1.35"
  },
  "dependencies": {
    "@types/is-windows": "^1.0.0",
    "@types/mkdirp": "^0.5.2",
    "is-windows": "^1.0.2",
    "mkdirp": "^0.5.1"
  }
}